{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/Documents/\\u7A0B\\u5F0F\\u958B\\u767C/realtime-weather-app/src/WeatherSetting.js\";\nimport React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { availableLocations } from './utils';\nconst WeatherSettingWrapper = styled.div`\n  position: relative;\n  min-width: 360px;\n  box-shadow: ${({\n  theme\n}) => theme.boxShadow};\n  background-color: ${({\n  theme\n}) => theme.foregroundColor};\n  box-sizing: border-box;\n  padding: 20px;\n`;\nconst Title = styled.div`\n  font-size: 28px;\n  color: ${({\n  theme\n}) => theme.titleColor};\n  margin-bottom: 30px;\n`;\nconst StyledLabel = styled.label`\n  display: block;\n  font-size: 16px;\n  color: ${({\n  theme\n}) => theme.textColor};\n  margin-bottom: 15px;\n`;\nconst StyledSelect = styled.select`\n  display: block;\n  box-sizing: border-box;\n  background: transparent;\n  border: 1px solid ${({\n  theme\n}) => theme.textColor};\n  outline: none;\n  width: 100%;\n  max-width: 100%;\n  color: ${({\n  theme\n}) => theme.textColor};\n  font-size: 16px;\n  padding: 7px 10px;\n  margin-bottom: 40px;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  box-shadow: none;\n  outline: 0;\n`;\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  > button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    white-space: nowrap;\n    user-select: none;\n    margin: 0;\n    letter-spacing: 0.3px;\n    line-height: 1;\n    cursor: pointer;\n    overflow: visible;\n    text-transform: none;\n    border: 1px solid transparent;\n    background-color: transparent;\n    height: 35px;\n    width: 80px;\n    border-radius: 5px;\n    font-size: 14px;\n\n    &:focus,\n    &.focus {\n      outline: 0;\n      box-shadow: none;\n    }\n\n    &::-moz-focus-inner {\n      padding: 0;\n      border-style: none;\n    }\n  }\n`;\nconst Back = styled.button`\n  && {\n    color: ${({\n  theme\n}) => theme.textColor};\n    border-color: ${({\n  theme\n}) => theme.textColor};\n  }\n`;\nconst Save = styled.button`\n  && {\n    color: white;\n    background-color: #40a9f3;\n  }\n`;\nconst locations = availableLocations.map(location => location.cityName);\n\nconst WeatherSetting = ({\n  setCurrentPage,\n  cityName,\n  setCurrentCity\n}) => {\n  const [locationName, setLocationName] = useState(cityName);\n\n  const handleChange = e => {\n    setLocationName(e.target.value);\n  };\n\n  const handleSave = () => {\n    if (locations.includes(locationName)) {\n      console.log(`儲存的地區資訊為：${locationName}`);\n      setCurrentPage('WeatherCard');\n      setCurrentCity(locationName);\n    } else {\n      alert(`儲存失敗：您輸入的 ${locationName} 並非有效的地區`);\n      return;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(WeatherSettingWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, \"\\u8A2D\\u5B9A\"), /*#__PURE__*/React.createElement(StyledLabel, {\n    htmlFor: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"\\u5730\\u5340\"), /*#__PURE__*/React.createElement(StyledSelect, {\n    id: \"location\",\n    name: \"location\",\n    onChange: handleChange,\n    value: locationName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, locations.map(location => /*#__PURE__*/React.createElement(\"option\", {\n    value: location,\n    key: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, location))), /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Back, {\n    onClick: () => setCurrentPage('WeatherCard'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"\\u8FD4\\u56DE\"), /*#__PURE__*/React.createElement(Save, {\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"\\u5132\\u5B58\")));\n};\n\nexport default WeatherSetting;","map":{"version":3,"sources":["/Users/kevin/Documents/程式開發/realtime-weather-app/src/WeatherSetting.js"],"names":["React","useState","styled","availableLocations","WeatherSettingWrapper","div","theme","boxShadow","foregroundColor","Title","titleColor","StyledLabel","label","textColor","StyledSelect","select","ButtonGroup","Back","button","Save","locations","map","location","cityName","WeatherSetting","setCurrentPage","setCurrentCity","locationName","setLocationName","handleChange","e","target","value","handleSave","includes","console","log","alert"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { availableLocations } from './utils';\n\nconst WeatherSettingWrapper = styled.div`\n  position: relative;\n  min-width: 360px;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n  background-color: ${({ theme }) => theme.foregroundColor};\n  box-sizing: border-box;\n  padding: 20px;\n`;\n\nconst Title = styled.div`\n  font-size: 28px;\n  color: ${({ theme }) => theme.titleColor};\n  margin-bottom: 30px;\n`;\n\nconst StyledLabel = styled.label`\n  display: block;\n  font-size: 16px;\n  color: ${({ theme }) => theme.textColor};\n  margin-bottom: 15px;\n`;\n\nconst StyledSelect = styled.select`\n  display: block;\n  box-sizing: border-box;\n  background: transparent;\n  border: 1px solid ${({ theme }) => theme.textColor};\n  outline: none;\n  width: 100%;\n  max-width: 100%;\n  color: ${({ theme }) => theme.textColor};\n  font-size: 16px;\n  padding: 7px 10px;\n  margin-bottom: 40px;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  box-shadow: none;\n  outline: 0;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  > button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    white-space: nowrap;\n    user-select: none;\n    margin: 0;\n    letter-spacing: 0.3px;\n    line-height: 1;\n    cursor: pointer;\n    overflow: visible;\n    text-transform: none;\n    border: 1px solid transparent;\n    background-color: transparent;\n    height: 35px;\n    width: 80px;\n    border-radius: 5px;\n    font-size: 14px;\n\n    &:focus,\n    &.focus {\n      outline: 0;\n      box-shadow: none;\n    }\n\n    &::-moz-focus-inner {\n      padding: 0;\n      border-style: none;\n    }\n  }\n`;\n\nconst Back = styled.button`\n  && {\n    color: ${({ theme }) => theme.textColor};\n    border-color: ${({ theme }) => theme.textColor};\n  }\n`;\n\nconst Save = styled.button`\n  && {\n    color: white;\n    background-color: #40a9f3;\n  }\n`;\n\nconst locations = availableLocations.map((location) => location.cityName);\n\nconst WeatherSetting = ({ setCurrentPage, cityName, setCurrentCity }) => {\n  const [locationName, setLocationName] = useState(cityName);\n\n  const handleChange = (e) => {\n    setLocationName(e.target.value);\n  };\n\n  const handleSave = () => {\n    if (locations.includes(locationName)) {\n      console.log(`儲存的地區資訊為：${locationName}`);\n      setCurrentPage('WeatherCard');\n      setCurrentCity(locationName);\n    } else {\n      alert(`儲存失敗：您輸入的 ${locationName} 並非有效的地區`);\n      return;\n    }\n  };\n\n  return (\n    <WeatherSettingWrapper>\n      <Title>設定</Title>\n      <StyledLabel htmlFor=\"location\">地區</StyledLabel>\n\n      <StyledSelect\n        id=\"location\"\n        name=\"location\"\n        onChange={handleChange}\n        value={locationName}\n      >\n        {locations.map((location) => (\n          <option value={location} key={location}>\n            {location}\n          </option>\n        ))}\n      </StyledSelect>\n\n      <ButtonGroup>\n        <Back onClick={() => setCurrentPage('WeatherCard')}>返回</Back>\n        <Save onClick={handleSave}>儲存</Save>\n      </ButtonGroup>\n    </WeatherSettingWrapper>\n  );\n};\n\nexport default WeatherSetting;\n"]},"metadata":{},"sourceType":"module"}