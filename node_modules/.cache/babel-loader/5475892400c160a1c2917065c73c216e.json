{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/Documents/\\u7A0B\\u5F0F\\u958B\\u767C/realtime-weather-app/src/WeatherCard.js\";\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport dayjs from 'dayjs';\nimport WeatherIcon from './WeatherIcon.js';\nimport { ReactComponent as AirFlowIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/airFlow.svg\";\nimport { ReactComponent as RainIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/rain.svg\";\nimport { ReactComponent as RefreshIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/refresh.svg\";\nimport { ReactComponent as LoadingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/loading.svg\";\nimport { ReactComponent as CogIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/cog.svg\";\nconst WeatherCardWrapper = styled.div`\n  position: relative;\n  min-width: 360px;\n  box-shadow: ${({\n  theme\n}) => theme.boxShadow};\n  background-color: ${({\n  theme\n}) => theme.foregroundColor};\n  box-sizing: border-box;\n  padding: 30px 15px;\n`;\nconst Location = styled.div`\n  font-size: 28px;\n  color: ${({\n  theme\n}) => theme.titleColor};\n  margin-bottom: 20px;\n`;\nconst Description = styled.div`\n  font-size: 16px;\n  color: ${({\n  theme\n}) => theme.textColor};\n  margin-bottom: 30px;\n`;\nconst CurrentWeather = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n`;\nconst Temperature = styled.div`\n  color: ${({\n  theme\n}) => theme.temperatureColor};\n  font-size: 96px;\n  font-weight: 300;\n  display: flex;\n`;\nconst Celsius = styled.div`\n  font-weight: normal;\n  font-size: 42px;\n`;\nconst AirFlow = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16x;\n  font-weight: 300;\n  color: ${({\n  theme\n}) => theme.textColor};\n  margin-bottom: 20px;\n\n  svg {\n    width: 25px;\n    height: auto;\n    margin-right: 30px;\n  }\n`;\nconst Rain = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16x;\n  font-weight: 300;\n  color: ${({\n  theme\n}) => theme.textColor};\n\n  svg {\n    width: 25px;\n    height: auto;\n    margin-right: 30px;\n  }\n`;\nconst Refresh = styled.div`\n  position: absolute;\n  right: 15px;\n  bottom: 15px;\n  font-size: 12px;\n  display: inline-flex;\n  align-items: flex-end;\n  color: ${({\n  theme\n}) => theme.textColor};\n\n  svg {\n    margin-left: 10px;\n    width: 15px;\n    height: 15px;\n    cursor: pointer;\n    animation: rotate infinite 1.5s linear;\n    animation-duration: ${({\n  isLoading\n}) => isLoading ? '1.5s' : '0s'};\n  }\n\n  @keyframes rotate {\n    from {\n      transform: rotate(360deg);\n    }\n    to {\n      transform: rotate(0deg);\n    }\n  }\n`;\nconst Cog = styled(CogIcon)`\n  position: absolute;\n  top: 30px;\n  right: 15px;\n  width: 15px;\n  height: 15px;\n  cursor: pointer;\n`;\n\nconst WeatherCard = props => {\n  const {\n    weatherElement,\n    moment,\n    fetchData,\n    setCurrentPage,\n    cityName\n  } = props;\n  const {\n    observationTime,\n    temperature,\n    windSpeed,\n    description,\n    weatherCode,\n    rainPossibility,\n    comfortability,\n    isLoading\n  } = weatherElement;\n  return /*#__PURE__*/React.createElement(WeatherCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Cog, {\n    onClick: () => setCurrentPage('WeatherSetting'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Location, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, cityName), /*#__PURE__*/React.createElement(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, description, \" \", comfortability), /*#__PURE__*/React.createElement(CurrentWeather, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Temperature, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, Math.round(temperature), \" \", /*#__PURE__*/React.createElement(Celsius, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 37\n    }\n  }, \"\\xB0C\")), /*#__PURE__*/React.createElement(WeatherIcon, {\n    weatherCode: weatherCode,\n    moment: moment || 'day',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(AirFlow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AirFlowIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }), windSpeed, \" m/h\"), /*#__PURE__*/React.createElement(Rain, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RainIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), Math.round(rainPossibility), \" %\"), /*#__PURE__*/React.createElement(Refresh, {\n    onClick: fetchData,\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, \"\\u6700\\u5F8C\\u89C0\\u6E2C\\u6642\\u9593\\uFF1A\", new Intl.DateTimeFormat('zh-TW', {\n    hour: 'numeric',\n    minute: 'numeric'\n  }).format(dayjs(observationTime)), ' ', isLoading ? /*#__PURE__*/React.createElement(LoadingIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 22\n    }\n  }) : /*#__PURE__*/React.createElement(RefreshIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 40\n    }\n  })));\n};\n\nexport default WeatherCard;","map":{"version":3,"sources":["/Users/kevin/Documents/程式開發/realtime-weather-app/src/WeatherCard.js"],"names":["React","styled","dayjs","WeatherIcon","WeatherCardWrapper","div","theme","boxShadow","foregroundColor","Location","titleColor","Description","textColor","CurrentWeather","Temperature","temperatureColor","Celsius","AirFlow","Rain","Refresh","isLoading","Cog","CogIcon","WeatherCard","props","weatherElement","moment","fetchData","setCurrentPage","cityName","observationTime","temperature","windSpeed","description","weatherCode","rainPossibility","comfortability","Math","round","Intl","DateTimeFormat","hour","minute","format"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport dayjs from 'dayjs';\nimport WeatherIcon from './WeatherIcon.js';\nimport { ReactComponent as AirFlowIcon } from './images/airFlow.svg';\nimport { ReactComponent as RainIcon } from './images/rain.svg';\nimport { ReactComponent as RefreshIcon } from './images/refresh.svg';\nimport { ReactComponent as LoadingIcon } from './images/loading.svg';\nimport { ReactComponent as CogIcon } from './images/cog.svg';\n\nconst WeatherCardWrapper = styled.div`\n  position: relative;\n  min-width: 360px;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n  background-color: ${({ theme }) => theme.foregroundColor};\n  box-sizing: border-box;\n  padding: 30px 15px;\n`;\n\nconst Location = styled.div`\n  font-size: 28px;\n  color: ${({ theme }) => theme.titleColor};\n  margin-bottom: 20px;\n`;\n\nconst Description = styled.div`\n  font-size: 16px;\n  color: ${({ theme }) => theme.textColor};\n  margin-bottom: 30px;\n`;\n\nconst CurrentWeather = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nconst Temperature = styled.div`\n  color: ${({ theme }) => theme.temperatureColor};\n  font-size: 96px;\n  font-weight: 300;\n  display: flex;\n`;\n\nconst Celsius = styled.div`\n  font-weight: normal;\n  font-size: 42px;\n`;\n\nconst AirFlow = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16x;\n  font-weight: 300;\n  color: ${({ theme }) => theme.textColor};\n  margin-bottom: 20px;\n\n  svg {\n    width: 25px;\n    height: auto;\n    margin-right: 30px;\n  }\n`;\n\nconst Rain = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16x;\n  font-weight: 300;\n  color: ${({ theme }) => theme.textColor};\n\n  svg {\n    width: 25px;\n    height: auto;\n    margin-right: 30px;\n  }\n`;\n\nconst Refresh = styled.div`\n  position: absolute;\n  right: 15px;\n  bottom: 15px;\n  font-size: 12px;\n  display: inline-flex;\n  align-items: flex-end;\n  color: ${({ theme }) => theme.textColor};\n\n  svg {\n    margin-left: 10px;\n    width: 15px;\n    height: 15px;\n    cursor: pointer;\n    animation: rotate infinite 1.5s linear;\n    animation-duration: ${({ isLoading }) => (isLoading ? '1.5s' : '0s')};\n  }\n\n  @keyframes rotate {\n    from {\n      transform: rotate(360deg);\n    }\n    to {\n      transform: rotate(0deg);\n    }\n  }\n`;\n\nconst Cog = styled(CogIcon)`\n  position: absolute;\n  top: 30px;\n  right: 15px;\n  width: 15px;\n  height: 15px;\n  cursor: pointer;\n`;\n\nconst WeatherCard = (props) => {\n  const { weatherElement, moment, fetchData, setCurrentPage, cityName } = props;\n  const {\n    observationTime,\n    temperature,\n    windSpeed,\n    description,\n    weatherCode,\n    rainPossibility,\n    comfortability,\n    isLoading,\n  } = weatherElement;\n\n  return (\n    <WeatherCardWrapper>\n      <Cog onClick={() => setCurrentPage('WeatherSetting')} />\n      <Location>{cityName}</Location>\n      <Description>\n        {description} {comfortability}\n      </Description>\n      <CurrentWeather>\n        <Temperature>\n          {Math.round(temperature)} <Celsius>°C</Celsius>\n        </Temperature>\n        <WeatherIcon\n          weatherCode={weatherCode}\n          moment={moment || 'day'}\n        />\n      </CurrentWeather>\n      <AirFlow>\n        <AirFlowIcon />\n        {windSpeed} m/h\n      </AirFlow>\n      <Rain>\n        <RainIcon />\n        {Math.round(rainPossibility)} %\n      </Rain>\n      <Refresh onClick={fetchData} isLoading={isLoading}>\n        最後觀測時間：\n        {new Intl.DateTimeFormat('zh-TW', {\n          hour: 'numeric',\n          minute: 'numeric',\n        }).format(dayjs(observationTime))}{' '}\n        {isLoading ? <LoadingIcon /> : <RefreshIcon />}\n      </Refresh>\n    </WeatherCardWrapper>\n  );\n};\n\nexport default WeatherCard;\n"]},"metadata":{},"sourceType":"module"}