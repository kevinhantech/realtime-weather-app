{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react';\nconst authorizationKey = 'CWB-507B37E0-0383-4D8C-878D-628B54EC3536';\n\nconst fetchCurrentWeather = locationName => {\n  return fetch(`https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=${authorizationKey}&locationName=${locationName}`).then(response => response.json()).then(data => {\n    const locationData = data.records.location[0];\n    const weatherElements = locationData.weatherElement.reduce((neededElements, item) => {\n      if (['WDSD', 'TEMP', 'HUMD'].includes(item.elementName)) {\n        neededElements[item.elementName] = item.elementValue;\n      }\n\n      return neededElements;\n    }, {});\n    return {\n      observationTime: locationData.time.obsTime,\n      locationName: locationData.locationName,\n      temperature: weatherElements.TEMP,\n      windSpeed: weatherElements.WDSD,\n      humid: weatherElements.HUMD\n    };\n  });\n};\n\nconst fetchWeatherForecast = cityName => {\n  return fetch(`https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?Authorization=${authorizationKey}&locationName=${cityName}`).then(response => response.json()).then(data => {\n    const locationData = data.records.location[0];\n    const weatherElements = locationData.weatherElement.reduce((neededElements, item) => {\n      if (['Wx', 'PoP', 'CI'].includes(item.elementName)) {\n        neededElements[item.elementName] = item.time[0].parameter;\n      }\n\n      return neededElements;\n    }, {});\n    return {\n      description: weatherElements.Wx.parameterName,\n      weatherCode: weatherElements.Wx.parameterValue,\n      rainPossibility: weatherElements.PoP.parameterName,\n      comfortability: weatherElements.CI.parameterName\n    };\n  });\n};\n\nconst useWeatherApi = currentLocation => {\n  _s();\n\n  const {\n    locationName,\n    cityName\n  } = currentLocation;\n  const [weatherElement, setWeatherElement] = useState({\n    observationTime: new Date(),\n    locationName: '',\n    humid: 0,\n    temperature: 0,\n    windSpeed: 0,\n    description: '',\n    weatherCode: 0,\n    rainPossibility: 0,\n    comfortability: '',\n    isLoading: true\n  });\n  const fetchData = useCallback(() => {\n    const fetchingData = async () => {\n      const [currentWeather, weatherForecast] = await Promise.all([fetchCurrentWeather(locationName), fetchWeatherForecast(cityName)]);\n      setWeatherElement({ ...currentWeather,\n        ...weatherForecast,\n        isLoading: false\n      });\n    };\n\n    setWeatherElement(prevState => ({ ...prevState,\n      isLoading: true\n    }));\n    fetchingData();\n  }, [locationName, cityName]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return [weatherElement, fetchData];\n};\n\n_s(useWeatherApi, \"LYJli6AWqA0W6+QlxnWvjonzHAo=\");\n\nexport default useWeatherApi;","map":{"version":3,"names":["useState","useEffect","useCallback","authorizationKey","fetchCurrentWeather","locationName","fetch","then","response","json","data","locationData","records","location","weatherElements","weatherElement","reduce","neededElements","item","includes","elementName","elementValue","observationTime","time","obsTime","temperature","TEMP","windSpeed","WDSD","humid","HUMD","fetchWeatherForecast","cityName","parameter","description","Wx","parameterName","weatherCode","parameterValue","rainPossibility","PoP","comfortability","CI","useWeatherApi","currentLocation","setWeatherElement","Date","isLoading","fetchData","fetchingData","currentWeather","weatherForecast","Promise","all","prevState"],"sources":["/Users/kevin/Documents/程式開發/realtime-weather-app/src/useWeatherApi.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nconst authorizationKey = 'CWB-507B37E0-0383-4D8C-878D-628B54EC3536';\nconst fetchCurrentWeather = (locationName) => {\n  return fetch(\n    `https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=${authorizationKey}&locationName=${locationName}`\n  )\n    .then((response) => response.json())\n    .then((data) => {\n      const locationData = data.records.location[0];\n\n      const weatherElements = locationData.weatherElement.reduce(\n        (neededElements, item) => {\n          if (['WDSD', 'TEMP', 'HUMD'].includes(item.elementName)) {\n            neededElements[item.elementName] = item.elementValue;\n          }\n          return neededElements;\n        },\n        {}\n      );\n\n      return {\n        observationTime: locationData.time.obsTime,\n        locationName: locationData.locationName,\n        temperature: weatherElements.TEMP,\n        windSpeed: weatherElements.WDSD,\n        humid: weatherElements.HUMD,\n      };\n    });\n};\n\nconst fetchWeatherForecast = (cityName) => {\n  return fetch(\n    `https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?Authorization=${authorizationKey}&locationName=${cityName}`\n  )\n    .then((response) => response.json())\n    .then((data) => {\n      const locationData = data.records.location[0];\n      const weatherElements = locationData.weatherElement.reduce(\n        (neededElements, item) => {\n          if (['Wx', 'PoP', 'CI'].includes(item.elementName)) {\n            neededElements[item.elementName] = item.time[0].parameter;\n          }\n          return neededElements;\n        },\n        {}\n      );\n\n      return {\n        description: weatherElements.Wx.parameterName,\n        weatherCode: weatherElements.Wx.parameterValue,\n        rainPossibility: weatherElements.PoP.parameterName,\n        comfortability: weatherElements.CI.parameterName,\n      };\n    });\n};\n\nconst useWeatherApi = (currentLocation) => {\n  const { locationName, cityName } = currentLocation;\n  const [weatherElement, setWeatherElement] = useState({\n    observationTime: new Date(),\n    locationName: '',\n    humid: 0,\n    temperature: 0,\n    windSpeed: 0,\n    description: '',\n    weatherCode: 0,\n    rainPossibility: 0,\n    comfortability: '',\n    isLoading: true,\n  });\n\n  const fetchData = useCallback(() => {\n    const fetchingData = async () => {\n      const [currentWeather, weatherForecast] = await Promise.all([\n        fetchCurrentWeather(locationName),\n        fetchWeatherForecast(cityName),\n      ]);\n\n      setWeatherElement({\n        ...currentWeather,\n        ...weatherForecast,\n        isLoading: false,\n      });\n    };\n\n    setWeatherElement((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }));\n\n    fetchingData();\n  }, [locationName, cityName]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  return [weatherElement, fetchData];\n};\n\nexport default useWeatherApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}