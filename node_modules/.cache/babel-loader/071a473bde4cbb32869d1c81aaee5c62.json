{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/Documents/\\u7A0B\\u5F0F\\u958B\\u767C/realtime-weather-app/src/WeatherIcon.js\";\nimport React, { useMemo } from 'react';\nimport styled from '@emotion/styled';\nimport { ReactComponent as DayThunderstorm } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-thunderstorm.svg\";\nimport { ReactComponent as DayClear } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-clear.svg\";\nimport { ReactComponent as DayCloudyFog } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-cloudy-fog.svg\";\nimport { ReactComponent as DayCloudy } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-cloudy.svg\";\nimport { ReactComponent as DayFog } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-fog.svg\";\nimport { ReactComponent as DayPartiallyClearWithRain } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-partially-clear-with-rain.svg\";\nimport { ReactComponent as DaySnowing } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-snowing.svg\";\nimport { ReactComponent as NightThunderstorm } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-thunderstorm.svg\";\nimport { ReactComponent as NightClear } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-clear.svg\";\nimport { ReactComponent as NightCloudyFog } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-cloudy-fog.svg\";\nimport { ReactComponent as NightCloudy } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-cloudy.svg\";\nimport { ReactComponent as NightFog } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-fog.svg\";\nimport { ReactComponent as NightPartiallyClearWithRain } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-partially-clear-with-rain.svg\";\nimport { ReactComponent as NightSnowing } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-snowing.svg\";\nconst weatherTypes = {\n  isThunderstorm: [15, 16, 17, 18, 21, 22, 33, 34, 35, 36, 41],\n  isClear: [1],\n  isCloudyFog: [25, 26, 27, 28],\n  isCloudy: [2, 3, 4, 5, 6, 7],\n  isFog: [24],\n  isPartiallyClearWithRain: [8, 9, 10, 11, 12, 13, 14, 19, 20, 29, 30, 31, 32, 38, 39],\n  isSnowing: [23, 37, 42]\n};\nconst weatherIcons = {\n  day: {\n    isThunderstorm: /*#__PURE__*/React.createElement(DayThunderstorm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }),\n    isClear: /*#__PURE__*/React.createElement(DayClear, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }\n    }),\n    isCloudyFog: /*#__PURE__*/React.createElement(DayCloudyFog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }\n    }),\n    isCloudy: /*#__PURE__*/React.createElement(DayCloudy, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }),\n    isFog: /*#__PURE__*/React.createElement(DayFog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    }),\n    isPartiallyClearWithRain: /*#__PURE__*/React.createElement(DayPartiallyClearWithRain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 31\n      }\n    }),\n    isSnowing: /*#__PURE__*/React.createElement(DaySnowing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }\n    })\n  },\n  night: {\n    isThunderstorm: /*#__PURE__*/React.createElement(NightThunderstorm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }),\n    isClear: /*#__PURE__*/React.createElement(NightClear, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }\n    }),\n    isCloudyFog: /*#__PURE__*/React.createElement(NightCloudyFog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }\n    }),\n    isCloudy: /*#__PURE__*/React.createElement(NightCloudy, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }),\n    isFog: /*#__PURE__*/React.createElement(NightFog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    }),\n    isPartiallyClearWithRain: /*#__PURE__*/React.createElement(NightPartiallyClearWithRain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 31\n      }\n    }),\n    isSnowing: /*#__PURE__*/React.createElement(NightSnowing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }\n    })\n  }\n};\nconst IconContainer = styled.div`\n  flex-basis: 30%;\n\n  svg {\n    max-height: 110px;\n  }\n`;\n\nconst weatherCode2Type = weatherCode => {\n  const [weatherType] = Object.entries(weatherTypes).find(([weatherType, weatherCodes]) => weatherCodes.includes(Number(weatherCode))) || [];\n  return weatherType;\n};\n\nconst WeatherIcon = ({\n  weatherCode,\n  moment\n}) => {\n  const weatherType = useMemo(() => weatherCode2Type(weatherCode), [weatherCode]);\n  const weatherIcon = weatherIcons[moment][weatherType];\n  return /*#__PURE__*/React.createElement(IconContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 10\n    }\n  }, weatherIcon);\n};\n\nexport default WeatherIcon;","map":{"version":3,"sources":["/Users/kevin/Documents/程式開發/realtime-weather-app/src/WeatherIcon.js"],"names":["React","useMemo","styled","weatherTypes","isThunderstorm","isClear","isCloudyFog","isCloudy","isFog","isPartiallyClearWithRain","isSnowing","weatherIcons","day","night","IconContainer","div","weatherCode2Type","weatherCode","weatherType","Object","entries","find","weatherCodes","includes","Number","WeatherIcon","moment","weatherIcon"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport styled from '@emotion/styled';\nimport { ReactComponent as DayThunderstorm } from './images/day-thunderstorm.svg';\nimport { ReactComponent as DayClear } from './images/day-clear.svg';\nimport { ReactComponent as DayCloudyFog } from './images/day-cloudy-fog.svg';\nimport { ReactComponent as DayCloudy } from './images/day-cloudy.svg';\nimport { ReactComponent as DayFog } from './images/day-fog.svg';\nimport { ReactComponent as DayPartiallyClearWithRain } from './images/day-partially-clear-with-rain.svg';\nimport { ReactComponent as DaySnowing } from './images/day-snowing.svg';\nimport { ReactComponent as NightThunderstorm } from './images/night-thunderstorm.svg';\nimport { ReactComponent as NightClear } from './images/night-clear.svg';\nimport { ReactComponent as NightCloudyFog } from './images/night-cloudy-fog.svg';\nimport { ReactComponent as NightCloudy } from './images/night-cloudy.svg';\nimport { ReactComponent as NightFog } from './images/night-fog.svg';\nimport { ReactComponent as NightPartiallyClearWithRain } from './images/night-partially-clear-with-rain.svg';\nimport { ReactComponent as NightSnowing } from './images/night-snowing.svg';\n\nconst weatherTypes = {\n  isThunderstorm: [15, 16, 17, 18, 21, 22, 33, 34, 35, 36, 41],\n  isClear: [1],\n  isCloudyFog: [25, 26, 27, 28],\n  isCloudy: [2, 3, 4, 5, 6, 7],\n  isFog: [24],\n  isPartiallyClearWithRain: [\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    19,\n    20,\n    29,\n    30,\n    31,\n    32,\n    38,\n    39,\n  ],\n  isSnowing: [23, 37, 42],\n};\n\nconst weatherIcons = {\n  day: {\n    isThunderstorm: <DayThunderstorm />,\n    isClear: <DayClear />,\n    isCloudyFog: <DayCloudyFog />,\n    isCloudy: <DayCloudy />,\n    isFog: <DayFog />,\n    isPartiallyClearWithRain: <DayPartiallyClearWithRain />,\n    isSnowing: <DaySnowing />,\n  },\n  night: {\n    isThunderstorm: <NightThunderstorm />,\n    isClear: <NightClear />,\n    isCloudyFog: <NightCloudyFog />,\n    isCloudy: <NightCloudy />,\n    isFog: <NightFog />,\n    isPartiallyClearWithRain: <NightPartiallyClearWithRain />,\n    isSnowing: <NightSnowing />,\n  },\n};\n\nconst IconContainer = styled.div`\n  flex-basis: 30%;\n\n  svg {\n    max-height: 110px;\n  }\n`;\n\nconst weatherCode2Type = (weatherCode) => {\n  const [weatherType] =\n    Object.entries(weatherTypes).find(([weatherType, weatherCodes]) =>\n      weatherCodes.includes(Number(weatherCode))\n    ) || [];\n\n  return weatherType;\n};\n\nconst WeatherIcon = ({ weatherCode, moment }) => {\n  const weatherType = useMemo(() => weatherCode2Type(weatherCode), [\n    weatherCode,\n  ]);\n  const weatherIcon = weatherIcons[moment][weatherType];\n\n  return <IconContainer>{weatherIcon}</IconContainer>;\n};\n\nexport default WeatherIcon;\n"]},"metadata":{},"sourceType":"module"}